# Generated by Django 4.1.7 on 2023-04-30 03:28

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('address', models.CharField(max_length=255)),
                ('num_bedrooms', models.IntegerField()),
                ('num_bathrooms', models.IntegerField()),
                ('max_guests', models.IntegerField()),
                ('price_per_month', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('school_coordinates', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus', models.CharField(default='Main Campus', max_length=100)),
                ('hostel_name', models.CharField(default='unnamed hostel', max_length=50)),
                ('contact', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('image', models.ImageField(blank=True, default=None, upload_to='static/images')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('no_of_rooms', models.IntegerField()),
                ('hostel_coordinates', models.CharField(max_length=100)),
                ('category', models.IntegerField(choices=[(1, 'GHS500-GHS1000'), (2, 'GHS1100-GHS1500'), (3, 'GHS1600-GHS2000'), (4, 'GHS2100-GHS2500'), (5, 'GHS2600-GHS3000'), (6, '3000 & above')], default=1)),
                ('cost_per_room', models.FloatField()),
                ('duration', models.IntegerField()),
                ('wifi', models.CharField(max_length=20)),
                ('details', ckeditor_uploader.fields.RichTextUploadingField()),
                ('slug', models.SlugField(blank=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hostels.school')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateTimeField(default=django.utils.timezone.now)),
                ('momo_no', models.CharField(blank=True, max_length=10, null=True)),
                ('cost', models.FloatField()),
                ('room_no', models.IntegerField()),
                ('account_no', models.CharField(blank=True, max_length=100, null=True)),
                ('message', models.CharField(max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('hostel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hostels.hostel')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
